{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["studentsDisplay","data","map","ele","subArray","fields","Object","keys","shift","i","key","text","push","Card","variant","className","Grid","container","item","lg","onClick","navigator","clipboard","writeText","length","Paper","elevation","App","React","useState","index","setIndex","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u1oSAAe,I,qECOXA,EAAkBC,EAAKC,KAAI,SAACC,GAK5B,IAHF,IAAIC,EAAW,GACXC,EAASC,OAAOC,KAAKJ,GAHa,GAItBE,EAAOG,QAJe,SAK3BC,GACP,IAAIC,EAAML,EAAOI,GACbE,EAAOR,EAAI,GAAD,OAAIO,IAClBN,EAASQ,KACP,cAACC,EAAA,EAAD,CACAC,QAAQ,WACRC,UAAU,OAFV,SAGE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACGT,IAEH,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACGR,IAEH,cAACK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAAC,IAAD,CAAqBC,QAAS,kBAAMC,UAAUC,UAAUC,UAAUZ,gBAflEF,EAAI,EAAGA,EAAIJ,EAAOmB,OAAQf,IAAM,EAAhCA,GAwBX,OACE,cAACgB,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACGtB,OAwBQuB,MAnBf,WACE,MAA0BC,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKhB,UAAU,MAAf,UACE,wBAAQA,UAAU,eAEjB,8BAEGf,EAAgB8B,KAEnB,8BACE,cAACE,EAAA,EAAD,CACCZ,QAAS,kBAAMW,EAASD,EAAQ,IADjC,wBC1CMG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.841fa5e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport data  from './Students.json';\nimport {Button, Paper, Card, Grid} from '@material-ui/core';\nimport FileCopyRoundedIcon from '@material-ui/icons/FileCopyRounded';\n\nlet studentsDisplay = data.map((ele) => {\n\n  let subArray = [];\n  let fields = Object.keys(ele)\n  let excluding = fields.shift();\n    for (let i = 1; i < fields.length; i++) {\n      let key = fields[i];\n      let text = ele[`${key}`]\n      subArray.push(\n        <Card \n        variant=\"outlined\"\n        className=\"line\" >\n          <Grid container>\n            <Grid item lg={4}>\n              {key}\n            </Grid>\n            <Grid item lg={4}>\n              {text}\n            </Grid>\n            <Grid item lg={4}>\n             <FileCopyRoundedIcon onClick={() => navigator.clipboard.writeText(text)}/>\n            </Grid>\n          </Grid>\n        \n        </Card>)\n\n    }\n    \n\n  return (\n    <Paper elevation={6}>\n      {subArray}\n    </Paper>\n  )\n})\n\nfunction App() {\n  const [index, setIndex] = React.useState(0);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n       <div>\n       \n         {studentsDisplay[index]}\n       </div>\n       <div>\n         <Button\n          onClick={() => setIndex(index + 1)}\n         >Next</Button>\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}